apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: topolvm-system
  name: csi-topolvm-controller
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: topolvm-system:csi-topolvm-controller
rules:
  - apiGroups: ["topolvm.cybozu.com"]
    resources: ["logicalvolumes", "logicalvolumes/status"]
    verbs: ["get", "list", "watch", "create", "update", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: topolvm-system:csi-topolvm-controller
subjects:
  - kind: ServiceAccount
    name: csi-topolvm-controller
    namespace: topolvm-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: topolvm-system:csi-topolvm-controller


---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: external-provisioner-runner
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "create", "delete"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["list", "watch", "create", "update", "patch"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshots"]
    verbs: ["get", "list"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshotcontents"]
    verbs: ["get", "list"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["csinodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "watch"]

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-provisioner-role
subjects:
  - kind: ServiceAccount
    name: csi-topolvm-controller
    namespace: topolvm-system
roleRef:
  kind: ClusterRole
  name: external-provisioner-runner
  apiGroup: rbac.authorization.k8s.io

---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: topolvm-system
  name: external-provisioner-cfg
rules:
- apiGroups: [""]
  resources: ["endpoints"]
  verbs: ["get", "watch", "list", "delete", "update", "create"]
- apiGroups: ["coordination.k8s.io"]
  resources: ["leases"]
  verbs: ["get", "watch", "list", "delete", "update", "create"]

---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-provisioner-role-cfg
  namespace: topolvm-system
subjects:
  - kind: ServiceAccount
    name: csi-topolvm-controller
    namespace: topolvm-system
roleRef:
  kind: Role
  name: external-provisioner-cfg
  apiGroup: rbac.authorization.k8s.io


---

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: external-attacher-runner
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["csinodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments"]
    verbs: ["get", "list", "watch", "update"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-attacher-role
subjects:
  - kind: ServiceAccount
    name: csi-topolvm-controller
    namespace: topolvm-system
roleRef:
  kind: ClusterRole
  name: external-attacher-runner
  apiGroup: rbac.authorization.k8s.io

---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: topolvm-system
  name: external-attacher-cfg
rules:
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get", "watch", "list", "delete", "update", "create"]
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["get", "watch", "list", "delete", "update", "create"]

---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-attacher-role-cfg
  namespace: topolvm-system
subjects:
  - kind: ServiceAccount
    name: csi-topolvm-controller
    namespace: topolvm-system
roleRef:
  kind: Role
  name: external-attacher-cfg
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: v1
kind: Service
metadata:
  name: csi-topolvm-controller
  namespace: topolvm-system
spec:
  selector:
    app.kubernetes.io/name: csi-topolvm-controller
  ports:
    - name: dummy
      port: 12345
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: csi-topolvm-controller
  namespace: topolvm-system
spec:
  serviceName: csi-topolvm-controller
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: csi-topolvm-controller
  template:
    metadata:
      labels:
        app.kubernetes.io/name: csi-topolvm-controller
    spec:
      serviceAccountName: csi-topolvm-controller
      nodeSelector:
        kubernetes.io/hostname: kind-worker
      containers:
        - name: controller
          image: topolvm:dev
          imagePullPolicy: Never
          command:
            - /csi-topolvm
            - controller
            - --csi-socket-name=/run/topolvm/csi-topolvm.sock
          volumeMounts:
            - name: plugin-dir
              mountPath: /run/topolvm

        - name: csi-provisioner
          image: quay.io/k8scsi/csi-provisioner:v1.3.0
          imagePullPolicy: "IfNotPresent"
          args:
            - "--csi-address=/run/topolvm/csi-topolvm.sock"
            - "--feature-gates=Topology=true"
          volumeMounts:
            - name: plugin-dir
              mountPath: /run/topolvm

        - name: csi-attacher
          image: quay.io/k8scsi/csi-attacher:v1.2.1
          imagePullPolicy: "IfNotPresent"
          args:
            - "--csi-address=/run/topolvm/csi-topolvm.sock"
          volumeMounts:
            - name: plugin-dir
              mountPath: /run/topolvm

      volumes:
        - name: plugin-dir
          hostPath:
            path: /var/lib/kubelet/plugins/topolvm.cybozu.com/controller
            type: DirectoryOrCreate
---


apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: topolvm-system
  name: csi-topolvm-node
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: topolvm-system:csi-topolvm-node
rules:
  - apiGroups: ["topolvm.cybozu.com"]
    resources: ["logicalvolumes", "logicalvolumes/status"]
    verbs: ["get", "list", "watch", "create", "update", "delete", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: topolvm-system:csi-topolvm-node
subjects:
  - kind: ServiceAccount
    name: csi-topolvm-node
    namespace: topolvm-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: topolvm-system:csi-topolvm-node


---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: csi-topolvm-node
  namespace: topolvm-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: csi-topolvm-node
  template:
    metadata:
      labels:
        app.kubernetes.io/name: csi-topolvm-node
    spec:
      serviceAccountName: csi-topolvm-node
      containers:
        - name: node
          image: topolvm:dev
          imagePullPolicy: Never
          securityContext:
            privileged: true
          command:
            - /csi-topolvm
            - node
            - --node-name=$(MY_NODE_NAME)
            - --csi-socket-name=/run/topolvm/csi-topolvm.sock
            - --lvmd-socket-name=/run/lvmd/lvmd.sock
          env:
            - name: MY_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          volumeMounts:
            - name: node-plugin-dir
              mountPath: /run/topolvm
            - name: lvmd-socket-dir
              mountPath: /run/lvmd
            - name: device-dir
              mountPath: /dev
            - name: pod-volumes-dir
              mountPath: /var/lib/kubelet/pods
              mountPropagation: "Bidirectional"
            - name: csi-plugin-dir
              mountPath: /var/lib/kubelet/plugins/kubernetes.io/csi
              mountPropagation: "Bidirectional"

        - name: csi-registrar
          image: quay.io/k8scsi/csi-node-driver-registrar:v1.1.0
          imagePullPolicy: "IfNotPresent"
          args:
            - "--csi-address=/run/topolvm/csi-topolvm.sock"
            - "--kubelet-registration-path=/var/lib/kubelet/plugins/topolvm.cybozu.com/node/csi-topolvm.sock"
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh", "-c", "rm -rf /registration/topolvm.cybozu.com /registration/topolvm.cybozu.com-reg.sock"]
          volumeMounts:
            - name: node-plugin-dir
              mountPath: /run/topolvm
            - name: registration-dir
              mountPath: /registration

        - name: topolvm-node
          image: topolvm:dev
          imagePullPolicy: Never
          command:
            - /topolvm-node
            - --node-name=$(MY_NODE_NAME)
            - --lvmd-socket=/run/lvmd/lvmd.sock
            - --development=true
          env:
            - name: MY_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          volumeMounts:
            - name: lvmd-socket-dir
              mountPath: /run/lvmd

      volumes:
        - name: registration-dir
          hostPath:
            path: /var/lib/kubelet/plugins_registry/
            type: Directory
        - name: node-plugin-dir
          hostPath:
            path: /var/lib/kubelet/plugins/topolvm.cybozu.com/node
            type: DirectoryOrCreate
        - name: csi-plugin-dir
          hostPath:
            path: /var/lib/kubelet/plugins/kubernetes.io/csi
            type: DirectoryOrCreate
        - name: pod-volumes-dir
          hostPath:
            path: /var/lib/kubelet/pods/
            type: DirectoryOrCreate
        - name: lvmd-socket-dir
          hostPath:
            path: /tmp/topolvm
            type: Directory
        - name: device-dir
          hostPath:
            path: /dev
            type: Directory
---
apiVersion: storage.k8s.io/v1beta1
kind: CSIDriver
metadata:
  name: topolvm.cybozu.com
spec:
  attachRequired: true
  podInfoOnMount: false
